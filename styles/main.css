/* ==========================================================================
   Modern CSS reset by Josh Comeau: https://www.joshwcomeau.com/css/custom-css-reset/
========================================================================== */

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
    box-sizing: border-box;
}

/*
    2. Remove default margin
  */
* {
    margin: 0;
}

/*
    Typographic tweaks!
    3. Add accessible line-height
    4. Improve text rendering
  */
body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}

/*
    5. Improve media defaults
  */
img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

/*
    6. Remove built-in form typography styles
  */
input,
button,
textarea,
select {
    font: inherit;
}

/*
    7. Avoid text overflows
  */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

/*
    8. Create a root stacking context
  */
#root,
#__next {
    isolation: isolate;
}

/* ==========================================================================
   Hosted Fonts
========================================================================== */

@font-face {
    font-family: 'Figtree-ExtraBold';
    src: url('../assets/fonts/static/Figtree-ExtraBold.ttf');
}

@font-face {
    font-family: 'Figtree-Medium';
    src: url('../assets/fonts/Figtree-VariableFont_wght.ttf');
}

/* ==========================================================================
   Custom Styles
========================================================================== */

/* Variables */
:root {
    --main-color: #f4d04e;
    --main-corner-radius: 1.25rem;
    --alt-corner-radius: .625rem;
    --main-padding: 1.5rem;
    --main-margin: 1.5rem;
    --alt-margin: .75rem;
    --main-text-color: #111;
    --paragraph-text-color: #6b6b6b;
    --white: #fff;

    background-color: var(--main-color);
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* So I am interested in 2 points.
1. Is it possible to shrink the paragraph without adding fixed width to its parent?
2. Could I use span instead of div on "category" class and still get
the same result with same amount of code lines?
*/

/* Classes */

.card {
    border-radius: var(--main-corner-radius);
    padding: var(--main-padding);
    border: .0625rem solid var(--main-text-color);
    background-color: var(--white);
    width: 24rem;
    box-shadow: .5rem .5rem 0 0 rgb(0 0 0 / 100%);
    color: var(--main-text-color);
    display: flex;
    flex-direction: column;
    gap: var(--main-margin);
}

.blog-image {
    border-radius: var(--alt-corner-radius);
}

.content {
    display: flex;
    flex-direction: column;
    gap: var(--alt-margin);
}

.category {
    display: inline-block;
    width: fit-content;
    border-radius: .25rem;
    background-color: var(--main-color);
    padding: .25rem .75rem;
    font: calc(.707rem + .187vw) / 150% 'Figtree-ExtraBold';

    &:hover {
        background-color: var(--main-text-color);
    }
}

.publish-date {
    font: 500 calc(.707rem + .187vw) / 150% 'Figtree-Medium', sans-serif;
}

.title {
    font: calc(1.164rem + 0.375vw) / 150% 'Figtree-ExtraBold', sans-serif;
}

.description {
    font: 500 calc(.8313rem + .188vw) / 150% 'Figtree-Medium', sans-serif;
    color: var(--paragraph-text-color);
}

.author {
    display: flex;
    align-items: center;
    font: .875rem / 150% 'Figtree-ExtraBold', sans-serif;
}

/* is this one faster as adding hover effect on each class separately? */

.category,
.title,
.author {
    &:hover {
        color: var(--main-color);
        cursor: pointer;
    }
}

.avatar {
    margin-right: var(--alt-margin);
}

/* media queries start */

@media only screen and (min-width: 23.4375rem) and (max-width: 67.5rem) {

    .card {
        width: 20.4375rem;
    }
}


@media only screen and (min-width: 20rem) and (max-width: 23.4375rem) {

    .card {
        width: 18.125rem;
        padding: 1.25rem;
    }
}